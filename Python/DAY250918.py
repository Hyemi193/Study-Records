# ------------------------------------------------------------------------------------------------------
# Unit 12. 딕셔너리 사용하기
# ------------------------------------------------------------------------------------------------------
# 12.1 딕셔너리 만들기
# ------------------------------------------------------------------------------------------------------
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
print(lux)

# 12.1.1 키 이름 중복
lux = {'health' : 490, 'health' : 800, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
print(lux['health'])    # 키가 중복되면 가장 뒤에 있는 값만 사용
print(lux)              # 중복되는 키는 저장 X

# 12.1.2 딕셔너리 키의 자료형
## 키 : 정수, 실수, 불
## 값 : 리스트, 딕셔너리 등을 포함하여 모든 자료형 사용 가능
x = {100 : 'hundred', False : 0, 3.5 : [3.5, 3.5]}
print(x)

# 12.1.3 빈 딕셔너리 만들기
x = {}
print(x)
y = dict()
print(y)

# 12.1.4 dict로 딕셔너리 만들기
## 키 = 값 형식
lux1 = dict(health = 490, mana = 334, melee = 550, armor = 18.72)
print(lux1)

## zip 함수 이용
lux2 = dict(zip(['health', 'mana', 'melee', 'armor'], [490, 334, 550, 18.72]))
print(lux2)

## 리스트 안에 (키, 값) 형식의 튜플을 나열
lux3 = dict([('health', 490), ('mana', 334), ('melee', 550), ('armor', 18.72)])
print(lux3)

## dict 안에서 중괄호로 생성
lux4 = dict({'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72})

# ------------------------------------------------------------------------------------------------------
# 12.2 딕셔너리의 키에 접근하고 값 할당하기
# ------------------------------------------------------------------------------------------------------
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
print(lux['health'])
print(lux['armor'])

# 12.2.1 딕셔너리의 키에 값 할당하기
lux['health'] = 2037
lux['mana'] = 1184
lux['mana_regen'] = 3.28
print(lux)

# 12.2.2 딕셔너리의 키 확인
print('health' in lux)
print('attack_speed' in lux)

print('attack_speed' not in lux)
print('health' not in lux)

# 12.2.3 딕셔너리의 키 개수 구하기
lux = {'health': 490, 'mana': 334, 'melee': 550, 'armor': 18.72}
print(len(lux))
print(len({'health': 490, 'mana': 334, 'melee': 550, 'armor': 18.72}))

# 심사문제
# a = input().split()
# b = map(float, input().split())
# print(dict(zip(a, b)))

# ------------------------------------------------------------------------------------------------------
# Unit 13. if 조건문으로 특정 조건일 때 코드 실행하기
# ------------------------------------------------------------------------------------------------------
# 13.1 if 조건문 사용하기
x = 10
if x == 10:
    print('10입니다.')

# 13.1.1 if 조건문의 기본 형태와 실행 흐름 알아보기
## if 조건식 : 형식으로 사용하며 그 다음 줄에는 들여쓰기를 한 뒤 조건식이 만족할 때 실행할 코드를 넣음

# 13.1.2 if 조건문을 사용할 때 주의할 점
## 값 비교할 때 =을 두 개 붙여서 ==로 사용

## 13.1.3 if 조건문에서 코드를 생략하기
x = 11
if x == 10:
    pass        # 나중에 작성해야 할 코드를 표시할 때 사용할 수 있음


# ------------------------------------------------------------------------------------------------------
# 13.2 if 조건문과 들여쓰기
# ------------------------------------------------------------------------------------------------------
## if 다음에 오는 코드들은 반드시 들여쓰기 깊이가 같아야 함
x = 10

if x ==10:
    print('x에 들어있는 숫자는')
        # print('10입니다.')        # ERROR

## if 다음 줄에 들여쓰기가 된 코드는 if의 영향을 받아서 조건식에 따라 실행이 결정되지만 들여쓰기가 되지 않은 코드는 항상 실행
if x == 20:
    print('x에 들어있는 숫자는?')

print('20입니다.')

# ------------------------------------------------------------------------------------------------------
# 13.3 중첩 if 조건문 사용하기
# ------------------------------------------------------------------------------------------------------
x = 15

if x >= 10:
    print('10이상입니다.')
   
    if x == 15:
        print('15입니다.')

    if x == 20:
        print('20입니다.')

# ------------------------------------------------------------------------------------------------------
# 13.4 사용자가 입력한 값에 if 조건문 사용하기
# ------------------------------------------------------------------------------------------------------
# x = int(input())

# if x == 10:
#     print('10입니다.')

# if x == 20:
#     print('20입니다.')

# 심사문제 : 쿠폰 이름이 Cash3000일 경우 3000원을 할인하고 Cash5000일 경우 5000원 할인
# a, b = input().split()
# a = int(a)
# if b == 'Cash3000':
#     print(a -3000)

# if b == 'Cash5000':
#     print(a - 5000)

# ------------------------------------------------------------------------------------------------------
# Unit 14. else를 사용하여 두 방향으로 분기하기
# ------------------------------------------------------------------------------------------------------
# 14.1 else 사용하기
# ------------------------------------------------------------------------------------------------------
x = 5
if x == 10:
    print('10입니다.')
else:
    print('10이 아닙니다.')

# ------------------------------------------------------------------------------------------------------
# 14.2 else와 들여쓰기
# ------------------------------------------------------------------------------------------------------
x = 10

if x == 10:
    print('10입니다.')
else:
    print('x에 들어있는 숫자는')
print('10이 아닙니다.')             # if와 마찬가지로 들여쓰기 깊이가 같아야하며 들여쓰기를 하지 않으면 무조건 출력됨

# ------------------------------------------------------------------------------------------------------
# 14.3 if 조건문의 동작 방식 알아보기
# ------------------------------------------------------------------------------------------------------
if True:
    print('참')
else:
    print('거짓')
    
if False:
    print('참')
else:
    print('거짓')

if None:
    print('참')
else:
    print('거짓')

# 14.3.1 if 조건문에 숫자 지정하기
if 0:
    print('참')
else:
    print('거짓')

if 1:
    print('참')
else:
    print('거짓')

# 14.3.2 if 조건문에 문자열 지정하기
if 'Hello':
    print('참')
else:
    print('거짓')

if '':
    print('참')
else:
    print('거짓')

# ------------------------------------------------------------------------------------------------------
# 14.4 조건식을 여러 개 지정하기
# ------------------------------------------------------------------------------------------------------
x = 10
y = 20

if x == 10 and y == 20:
    print('참')
else:
    print('거짓')

# 14.4.1 중첩 if 조건문과 논리 연산자
if x > 0:
    if x < 20:
        print('20보다 작은 양수입니다.')

if x > 0 and x < 20:
    print('20보다 작은 양수입니다.')

if 0 < x < 20:
    print('20보다 작은 양수입니다.')    

# 심사문제
# Korean, Math, English, Science = map(int, input().split())
# if 0 <= Korean <= 100 and 0 <= Math <= 100 and 0 <= English <= 100 and 0 <= Science <= 100:

#     if (Korean + Math + English + Science)/4 >= 80:
#         print('합격')
#     else:
#         print('불합격') 

# else:
#     print('잘못된 점수')


# ------------------------------------------------------------------------------------------------------
# Unit 15. elif를 사용하여 여러 방향으로 분기하기
# ------------------------------------------------------------------------------------------------------
# 15.1 elif 사용하기
x = 20

if x == 10:
    print('10입니다.')
elif x == 20:
    print('20입니다.')

# 15.1.1 if, elif, else를 모두 사용하기
x = 30

if x == 10:
    print('10입니다.')
elif x == 20:
    print('20입니다.')
else:
    print('10도 20도 아닙니다.')

# 15.1.2 음료수 자판기 만들기
# button = int(input())

# if button == 1:
#     print('콜라')
# elif button == 2:
#     print('사이다')
# elif button == 3:
#     print('환타')
# else:
#     print('제공하지 않는 메뉴')


# # 심사문제
# age = int(input())
# balance = 9000
# if 7 <= age <= 12:
#     balance = balance - 650
# elif 13 <= age <= 18:
#     balance = balance - 1050
# else:
#     balance = balance - 1250
# print(balance)


# ------------------------------------------------------------------------------------------------------
# Unit 16. For문과 range
# ------------------------------------------------------------------------------------------------------
# 16.1 for와 range 사용하기
# ------------------------------------------------------------------------------------------------------
for i in range(10):
    print('Hello, world!')

# 16.1.1 반복문에서 변수의 변화 알아보기
for i in range(10):
    print('Hello, world!', i)

## 변수 i : 루프 인덱스

# ------------------------------------------------------------------------------------------------------
# Unit 16.2 for와 range 응용하기
# ------------------------------------------------------------------------------------------------------
# 16.2.1 시작하는 숫자와 끝나는 숫자 지정하기
for i in range(5, 12):
    print('Hello, world!', i)

# 16.2.2 증가폭 사용하기
for i in range(0, 10, 2):
    print(i)

# 16.2.3 숫자 감소시키기
for i in range(10, 0):
    print('Hello, world!', i)   # range는 숫자가 증가하는 기본 값이 양수 1이기 때문에 아무것도 출력 X

for i in range(10, 0, -1):
    print('Hello, world!', i)

for i in reversed(range(5)):
    print(i)


# 16.2.4 입력한 횟수대로 반복하기
# count = int(input("반복할 횟수를 입력하세요: "))

# for i in range(count):
#     print('Hello, world!', i)

# 16.3 시퀀스 객체로 반복하기
## list
a = [10, 20, 30, 40, 50]
for i in a:
    print(i)

## tuple
fruits = ('apple', 'orange', 'grape')
for fruit in fruits:
    print(fruit)

## 문자열
for letter in 'Python':
    print(letter, end = ' ')
for letter in reversed('Python'):
    print(letter, end = ' ')

# 심사문제 : 구구단 만들기
n = int(input())

for i in range(1, 10):
        print(n, '*', i, "=", n*i)
