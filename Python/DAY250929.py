# ------------------------------------------------------------------------------------------------------
# Unit 29. 함수 사용하기
# ------------------------------------------------------------------------------------------------------
# 29.1 Hello, world! 출력 함수 만들기
# ------------------------------------------------------------------------------------------------------
## 29.1.1 함수 생성
def hello():
    print('Hello, world!')

# 29.1.2 함수 호출
hello()

# 29.1.3 소스 파일에서 함수를 만들고 호출

# 29.1.4 함수이 실행 순서
## 1. 파이썬 스크립트 최초 실행
## 2. hello 함수 호출
## 3. hello 함수 실행
## 4. print 함수 실행 및 'Hello, world!' 출력
## 5. hello 함수 종료
## 6. 파이썬 스크립트 종료

# 참고) 빈 함수 만들기
def hello():
    pass

# ------------------------------------------------------------------------------------------------------
# 29.2 덧셈 함수 만들기
# ------------------------------------------------------------------------------------------------------
def add(a, b):
    print(a + b)

add(10, 20)

# 참고) 함수 독스트링 (문서화 문자열) : 함수의 :(콜론) 바로 다음 줄에 """ """(큰 따옴표 세 개)로 문자열을 입력하면 함수에 대한 설명을 넣을 수 있는데 이런 방식의 문자열
def add(a, b):
    """이 함수는 a와 b를 더한 뒤 결과를 반환하는 함수입니다."""
    return a + b

x = add(10, 20)
print(x)
print(add.__doc__)      # 함수의 __doc__로 독스트링 출력

# ------------------------------------------------------------------------------------------------------
# 29.3 함수의 결과를 반환하기
# ------------------------------------------------------------------------------------------------------
def add(a, b):
    return a + b

x = add(10, 20)
print(x)
print(add(10, 20))

# 참고) 매개변수는 없고 반환값만 있는 함수
def one():
    return 1

x = one()
print(x)

# 참고) return으로 함수 중간에서 빠져나오기
def not_ten(a):
    if a == 10:
        return
    print(a, '입니다.', sep = '')

print(not_ten(5))
print(not_ten(10))