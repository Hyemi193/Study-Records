# ---------------------------------------------------------------
# Unit 4. 기본 문법
# ---------------------------------------------------------------
# 4.1 세미콜론 : 파이썬은 세미콜론을 붙이지 않지만, 붙여도 문법 에러는 발생하지 않음. 보통 한 줄에 여러 구문을 사용할 때 세미콜론으로 구분.
# ---------------------------------------------------------------
print('Hello, world!')
print('Hello'); print('1234')
 
# ---------------------------------------------------------------
# 4.2 주석
# ---------------------------------------------------------------
# 4.2.1 한 줄 주석
 
#print('Hello, world!')
a = 1 + 2 # 더하기
print('Hello, world') #printf('1234567890)
 
# 4.2.2 블록 주석 : 코드를 읽기 쉽도록 # 뒤에 공백 추가
# 더하기
# a = 1 + 2

# ---------------------------------------------------------------
# 4.3 들여쓰기
# ---------------------------------------------------------------
if a ==10:
    print('10입니다.')

# ---------------------------------------------------------------
# 4.4 코드 블록
# ---------------------------------------------------------------
if a == 10:
    print('10')
    print('입니다.')


# ---------------------------------------------------------------
# Unit 5. 숫자 계산하기
# ---------------------------------------------------------------
# 5.1 정수 계산하기
# ---------------------------------------------------------------
# 5.1.1 사칙연산
print(1 + 1)
print(1 - 2)
print(2 * 2)
print(5 / 2)
print(4 / 2)

# 5.1.2 나눗셈 후 소수점 이하를 버리는 // 연산자 : 버림 나눗셈(floor division)
print(5 // 2)
print(4 // 2)

print(5.5 // 2)         # 실수에 // 연산자를 사용하면 결과는 실수
print(4 // 2.0)         # 따라서 결과는 항상 .0
print(4.1 // 2.1)

# 5.1.3 나눗셈 후 나머지를 구하는 %연산자 : 모듈로(modulo) 연산자
print(5 % 2)

# 5.1.4 거듭제곱을 구하는 **연산자
print(2 ** 10)

# 5.1.5 값을 정수로 만들기 (int는 정수(integer)을 뜻하며 값을 정수로 만듦(소수점 이하는 버림))
print(int(3.3))
print(int(5/2))
print(int('10'))

# 5.1.6 객체의 자료형 알아내기
print(type(10))

# 참고) 몫과 나머지를 함께 구하기
print(divmod(5, 2))

quotient, remainder = divmod(5, 2)
print(quotient, remainder)

# 참고) 진수, 8진수, 16진수
print(0b110)
print(0o10)
print(0xF)

# ---------------------------------------------------------------
# 5.2 실수 계산하기
# ---------------------------------------------------------------
print(3.5 + 2.1)
print(4.3 - 2.7)
print(1.5 * 3.1)
print(5.5 / 3.1)

# 5.2.1 실수와 정수를 함께 계산하면?
print(4.2 + 5)

# 5.2.2 값을 실수로 만들기
print(float(5))
print(float(1 + 2))
print(float('5.3'))

print(type(3.5))

# 참고) 복소수
print(1.2 + 1.3j)
print(complex(1.2, 1.3))

# ---------------------------------------------------------------
# 5.3 괄호 사용하기
# ---------------------------------------------------------------
print((35 + 1) * 2)


# ---------------------------------------------------------------
# Unit 6. 변수와 입력 사용하기
# ---------------------------------------------------------------
# 6.1 변수 만들기
# ---------------------------------------------------------------
x = 10
print(x)

y = 'Hello, world!'
print(y)

# 6.1.1 변수의 자료형 알아내기
print(type(x))
print(type(y))

# 참고) 수학에서는 =(등호) 기호는 양 변이 같다는 뜻이지만 프로그래밍 언어에서는 변수에 값을 할당한다는 의미
#      수학의 등호와 같은 역할을 하는 연산자는 ==


# 6.1.2 변수 여러 개를 한 번에 만들기
x, y, z = 10, 20, 30
print(x, y, z)

# a, b, c = 10, 20      # 변수와 값의 개수가 맞아야 함
# print(a, b, c)        

x = y = z = 10
print(x, y, z)

x, y = 10, 20
x, y = y, x
print(x, y)

# 참고) 변수 삭제 => del
x = 10
del x
# print(x)

# 참고) 빈 변수 만들기
x = None
print(x)
print(type(x))

# ---------------------------------------------------------------
# 6.2 변수로 계산하기
# ---------------------------------------------------------------
a = 10
b = 20
c = a + b
print(c)

# 6.2.1 산술 연산 후 할당 연산자 사용하기
a = 10
a = a + 10
print(a)
a += 20     # a와 20을 더한 후 결과를 다시 a에 저장
print(a)

# 참고) 부호 붙이기
x = -10
print(+x)
print(-x)

# ---------------------------------------------------------------
# 6.3 입력 값을 변수에 저장하기
# ---------------------------------------------------------------
# 6.3.1 input 함수 사용하기
#input()

# 6.3.2 input 함수의 결과를 변수에 할당하기
# x = input('문자열을 입력하세요:')
# print(x)

# 6.3.3 두 숫자의 합 구하기
# a = input('첫 번째 숫자를 입력하세요:')
# print(type(a))
# b = input('두 번째 숫자를 입력하세요:')
# print(a + b)

# 6.3.4 입력 값을 정수로 변환하기
# a = int(input('첫 번째 숫자를 입력하세요:'))
# b = int(input('두 번째 숫자를 입력하세요:'))
# print(a + b)

# ---------------------------------------------------------------
# 6.4 입력 값을 변수 두 개에 저장하기
# ---------------------------------------------------------------
# a, b = input('문자열 두 개를 입력하세요:').split()
# print(a)
# print(b)

# ---------------------------------------------------------------
# 6.4.1 두 숫자의 합 구하기
# c, d = input('숫자 두 개를 입력하세요:').split()
# print(c + d)

# 6.4.2 입력 값을 정수로 변환하기
# c, d = input('숫자 두 개를 입력하세요:').split()
# c = int(c)
# d = int(d)
# print(c + d)
# print(int(c) + int(d))

# 6.4.3 map을 사용하여 정수로 변환하기
# e, f = map(int, input('숫자 두 개를 입력하세요:').split())
# print(e + f)

# 6.4.4 입력받은 값을 콤마를 기준으로 분리하기
# a, b = map(int, input('숫자 두 개를 입력하세요:').split(','))
# print(a + b)


# ---------------------------------------------------------------
# Unit 7. 출력 방법 알아보기
# ---------------------------------------------------------------
# 7.1 값을 여러 개 출력하기
# ---------------------------------------------------------------
print(1, 2, 3)
print('Hello', 'Python')

# 7.1.1 sep(구분자, separator)로 값 사이에 문자 넣기
print(1, 2, 3, sep = ', ')
print(1, 2, 3, sep = ',')
print('Hello', 'Python', sep = '')
print(1920, 1080, sep = 'x')

# ---------------------------------------------------------------
# 7.2 줄바꿈 활용하기
# ---------------------------------------------------------------
print(1, 2, 3, sep = '\n')
print('1\n2\n3')

# 참고) 제어 문자
# \n : 다음 줄로 이동하며 개행이라고 부름
# \t : 탭 문자, 키보드의 Tab 키와 같으며 여러 칸을 띄움
# \\ : \ 문자 자체를 출력할 때는 \를 두 번 써야함

# 7.2.1 end 사용하기
print(1, end = '')
print(2)
print(3, end = ' ')
print(4)